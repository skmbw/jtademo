<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:spring="http://www.infinispan.org/schemas/spring" 
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd http://www.infinispan.org/schemas/spring http://www.infinispan.org/schemas/infinispan-spring-5.0.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"
	default-autowire="byName">
	
	<!-- auto wire bean -->
	<context:annotation-config/>
	<!-- auto scan bean base package , 可以有多个值，以逗号分开-->
	<context:component-scan base-package="com.vteba"/>

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>
	
	<!--  Bitronix Transaction Manager embedded configuration -->
	<bean id="btmTransactionService" factory-method="getConfiguration" class="bitronix.tm.TransactionManagerServices">
	    <!-- <property name="serverId" value="spring-btm" /> -->
	</bean>
	 
	<!-- create BTM transaction manager -->
	<bean id="btmTransactionManager" factory-method="getTransactionManager"
	    class="bitronix.tm.TransactionManagerServices" destroy-method="shutdown" depends-on="btmTransactionService"/>
    
    <!-- jta事务管理器 -->
    <bean id="xaTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
	    <property name="transactionManager" ref="btmTransactionManager"/>
	    <property name="userTransaction" ref="btmTransactionManager"/>
    </bean>
    
    <!-- 注解驱动的事务管理配置 -->
    <tx:annotation-driven transaction-manager="xaTransactionManager"/>
    
    <!-- bitronix.tm.resource.jdbc.PoolingDataSource -->
    <bean id="jta1DataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource" init-method="init" destroy-method="close">
	    <property name="className" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
	    <property name="uniqueName" value="mysqlSkmbw" />
	    <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
	    <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
	    <property name="driverProperties">
	        <props>
	            <prop key="ServerName">${jdbc.skmbwServerName}</prop>
        		<prop key="Port">${jdbc.skmbwServerPort}</prop>
        		<prop key="DatabaseName">${jdbc.skmbwDatabaseName}</prop>
        		<prop key="User">${jdbc.username}</prop>
        		<prop key="Password">${jdbc.password}</prop>
        		<prop key="pinGlobalTxToPhysicalConnection">true</prop>
	        </props>
	    </property>
	    <property name="testQuery" value="select 1"/>
	    <property name="allowLocalTransactions" value="true"/>
	</bean>
	<bean id="jta2DataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource" init-method="init" destroy-method="close">
	    <property name="className" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
	    <property name="uniqueName" value="mysqlBizili"/>
	    <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
	    <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
	    <property name="driverProperties">
	        <props>
	            <prop key="ServerName">${jdbc.biziliServerName}</prop>
        		<prop key="Port">${jdbc.biziliServerPort}</prop>
        		<prop key="DatabaseName">${jdbc.biziliDatabaseName}</prop>
        		<prop key="User">${jdbc.username}</prop>
        		<prop key="Password">${jdbc.password}</prop>
        		<prop key="pinGlobalTxToPhysicalConnection">true</prop>
	        </props>
	    </property>
	    <property name="testQuery" value="select 1"/>
	</bean>
    
    <!--based annotation config Hibernate sessionFactory-->
	<bean id="jta1SessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="jta1DataSource" />
		<property name="packagesToScan">
    		<list>
     			<value>com.vteba.user.model</value>
    		</list>
   		</property>
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.jdbc.fetch_size">10</prop>
				<prop key="hibernate.default_batch_fetch_size">50</prop>
				<prop key="hibernate.jdbc.use_reflection_optimizer">true</prop>
				<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				
				<!-- the below three configration is the XaTransaction configration org.springframework.orm.hibernate4.SpringSessionContext-->
				<prop key="hibernate.current_session_context_class">jta</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory</prop>
				<prop key="hibernate.transaction.jta.platform">org.hibernate.service.jta.platform.internal.BitronixJtaPlatform</prop>
				
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
			</props>
		</property>
	</bean>
    
	<!--based annotation config Hibernate sessionFactory-->
	<bean id="jta2SessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="jta2DataSource" />
		<property name="packagesToScan">
    		<list>
     			<value>com.vteba.member.model</value>
    		</list>
   		</property>
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.jdbc.fetch_size">10</prop>
				<prop key="hibernate.default_batch_fetch_size">50</prop>
				<prop key="hibernate.jdbc.use_reflection_optimizer">true</prop>
				<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				
				<!-- the below three configration is the XaTransaction configration -->
				<prop key="hibernate.current_session_context_class">jta</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory</prop>
				<prop key="hibernate.transaction.jta.platform">org.hibernate.service.jta.platform.internal.BitronixJtaPlatform</prop>
				
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
			</props>
		</property>
	</bean>
	
</beans>